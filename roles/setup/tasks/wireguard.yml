- name: Update apt cache
  apt:
    update_cache: yes

- name: Install WireGuard and necessary dependencies
  apt:
    name:
      - wireguard
      - wireguard-tools
      - resolvconf
    state: present

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes

- name: Create WireGuard configuration directory
  file:
    path: /etc/wireguard
    state: directory
    mode: '0700'

- name: Clone WireGuard Docker Compose repository (Debian)
  git:
    repo: "{{ docker_github_url }}"
    dest: "{{ home_dir }}/server-docker"
    force: yes
  when: ansible_nodename== "cloud-server1"

- name: Copy .env file to the WireGuard Docker Compose directory
  copy:
    src: files/.env
    dest: "{{ home_dir }}/server-docker/wireguard/.env"
  when: ansible_nodename== "cloud-server1"

- name: Check if Docker network exists
  command: docker network ls --filter name=my_shared_network --format '{{ "{{" }} .Name {{ "}}" }}'
  register: existing_network

- name: Create Docker network if not exists
  command: docker network create my_shared_network
  when: existing_network.stdout != 'my_shared_network'

- name: Start WireGuard using Docker Compose (Debian)
  command: docker compose up -d
  args:
    chdir: "{{ home_dir }}/server-docker/wireguard"
  when: ansible_nodename== "cloud-server1"

- name: Wireguard is stopped
  service:
    name: wg-quick@wg0
    state: stopped
  when: ansible_nodename== "home-server2"

- name: Write the wireguard client config file
  template:
    src: ./files/wg0.conf
    dest: /etc/wireguard/wg0.conf
  when: ansible_nodename== "home-server2"

- name: Wireguard is started and enabled
  service:
    name: wg-quick@wg0
    state: started
    enabled: true
  when: ansible_nodename== "home-server2"

- name: Ping VPN gateway to check connectivity
  shell: ping -c 2 10.252.1.1
  register: ping_result
  ignore_errors: yes
  when: ansible_nodename== "home-server2"

- name: Display ping results
  debug:
    msg: "{{ item }}"
  loop: "{{ ping_result.stdout_lines }}"
  when: ansible_nodename== "home-server2"