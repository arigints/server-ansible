server {
    listen 80;
    server_name links.arigints.my.id;
    return 301 https://$host$request_uri;
}
upstream links {
	server 10.252.1.2:8002;
}
server {
    listen 443 ssl;
    server_name links.arigints.my.id;

    ssl_certificate /etc/letsencrypt/live/arigints.my.id/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/arigints.my.id/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://links;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto  https;
	proxy_set_header X-VerifiedViaNginx yes;
	proxy_read_timeout                  60;
	proxy_connect_timeout               60;
	proxy_redirect                      off;

	# Specific for websockets: force the use of HTTP/1.1 and set the Upgrade header
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Forwarded-Proto $scheme;

	# Fixes Mixed Content errors.
	add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
    }
}
